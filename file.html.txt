<!DOCTYPE html>
<html lang="pt-BR">
<head>
  <meta charset="UTF-8">
  <meta name="viewport" content="width=device-width, initial-scale=1.0">
  <title>Dashboard RUB</title>
  
  <!-- Fontes -->
  <link href="https://fonts.googleapis.com/css2?family=Montserrat:wght@400;600;700&display=swap" rel="stylesheet">
  
  <!-- Bibliotecas Gráficas -->
  <script src="https://cdn.jsdelivr.net/npm/chart.js"></script>
  <script src="https://cdn.jsdelivr.net/npm/chartjs-plugin-datalabels"></script>
  
  <style>
    :root {
      --verde-primario: #1a3f36;
      --laranja-destaque: #e67e22;
      --creme: #f9f5f0;
      --cinza-texto: #333333;
    }
    
    body {
      background: 
        linear-gradient(rgba(249, 245, 240, 0.9), rgba(249, 245, 240, 0.95)),
        url('https://mir-s3-cdn-cf.behstatic.net/project_modules/1400/409533337.5b4b7d8c6f7e1.jpg') no-repeat center center fixed;
      background-size: cover;
      font-family: 'Montserrat', sans-serif;
      color: var(--cinza-texto);
      margin: 0;
      padding: 20px;
      min-height: 100vh;
    }
    
    .brand-header {
      display: flex;
      justify-content: space-between;
      align-items: center;
      padding: 15px 30px;
      background: white;
      border-radius: 0 0 12px 12px;
      box-shadow: 0 2px 10px rgba(0,0,0,0.1);
      margin-bottom: 30px;
    }
    
    .header-titles h1 {
      margin: 0;
      color: var(--verde-primario);
      font-weight: 700;
      font-size: 1.8rem;
    }
    
    .header-titles .tagline {
      margin: 0;
      color: var(--laranja-destaque);
      font-weight: 600;
      font-size: 0.9rem;
    }
    
    .header-badge {
      padding: 8px 15px;
      border-radius: 20px;
      background-color: var(--laranja-destaque);
      color: white;
      font-weight: bold;
    }
    
    .global-filter {
      text-align: center;
      margin-bottom: 30px;
      background: white;
      padding: 15px;
      border-radius: 8px;
      box-shadow: 0 2px 5px rgba(0,0,0,0.1);
      max-width: 800px;
      margin: 0 auto 30px;
    }
    
    .global-filter select {
      font-size: 16px;
      padding: 8px 15px;
      border: 2px solid var(--verde-primario);
      border-radius: 6px;
      background-color: white;
      color: var(--verde-primario);
      font-weight: 600;
    }
    
    .dashboard-section {
      margin-bottom: 40px;
      background: white;
      padding: 25px;
      border-radius: 12px;
      box-shadow: 0 4px 20px rgba(26, 63, 54, 0.1);
      border-left: 4px solid var(--verde-primario);
      max-width: 1000px;
      margin-left: auto;
      margin-right: auto;
    }
    
    .section-title {
      color: var(--verde-primario);
      border-bottom: 2px solid var(--creme);
      padding-bottom: 10px;
      margin-bottom: 20px;
      font-weight: 700;
    }
    
    .chart-container {
      width: 100%;
      height: 400px;
      margin-top: 20px;
    }
    
    @media (max-width: 768px) {
      .brand-header {
        flex-direction: column;
        gap: 10px;
        text-align: center;
      }
      
      .header-badge {
        margin-top: 10px;
      }
      
      .chart-container {
        height: 300px;
      }
    }
  </style>
</head>
<body>
  <!-- Cabeçalho Simplificado -->
  <header class="brand-header">
    <div class="header-titles">
      <h1>Indicadores</h1>
      <p class="tagline">tempo</p>
    </div>
    <div class="header-badge">
      <span id="current-time"></span>
    </div>
  </header>

  <!-- Filtro Global -->
  <div class="global-filter">
    <label for="mesGlobalSelect"><strong>Período:</strong></label>
    <select id="mesGlobalSelect" onchange="atualizarTodosGraficos()">
      <option value="Janeiro">Janeiro</option>
      <option value="Fevereiro">Fevereiro</option>
      <option value="Março">Março</option>
      <option value="Abril">Abril</option>
      <option value="Maio">Maio</option>
      <option value="Total" selected>Total</option>
    </select>
  </div>

  <!-- Seção Rupturas -->
  <div class="dashboard-section">
    <h2 class="section-title">Rupturas Operacionais por Setor</h2>
    <div class="chart-container">
      <canvas id="rupturasChart"></canvas>
    </div>
  </div>

  <!-- Seção Inventários -->
  <div class="dashboard-section">
    <h2 class="section-title">Inventários Residuais por Setor</h2>
    <div class="chart-container">
      <canvas id="inventariosChart"></canvas>
    </div>
  </div>

  <!-- Seção Endereços -->
  <div class="dashboard-section">
    <h2 class="section-title">Endereços Auditáveis por Setor</h2>
    <div class="chart-container">
      <canvas id="enderecosChart"></canvas>
    </div>
  </div>

  <script>
    // Configuração dos Dados
    const setores = ['Açougue', 'FLV', 'Frios', 'Mercearia', 'Padaria e Rotisseria'];
    const coresSetores = ['#1a3f36', '#e67e22', '#8e44ad', '#3498db', '#c0392b'];
    
    const dados = {
      rupturas: {
        'Janeiro': [13, 23, 28, 35, 42],
        'Fevereiro': [26, 12, 21, 31, 42],
        'Março': [17, 15, 24, 36, 28],
        'Abril': [24, 34, 27, 30, 48],
        'Maio': [8, 18, 20, 30, 44],
        'Total': [88, 102, 120, 162, 204]
      },
      inventarios: {
        'Janeiro': [5, 8, 12, 7, 10],
        'Fevereiro': [6, 9, 11, 8, 12],
        'Março': [4, 7, 10, 6, 9],
        'Abril': [7, 10, 13, 9, 11],
        'Maio': [5, 8, 11, 7, 10],
        'Total': [27, 42, 57, 37, 52]
      },
      enderecos: {
        'Janeiro': [45, 38, 42, 50, 48],
        'Fevereiro': [48, 42, 45, 52, 50],
        'Março': [50, 45, 48, 55, 52],
        'Abril': [52, 48, 50, 58, 55],
        'Maio': [55, 50, 52, 60, 58],
        'Total': [250, 223, 237, 275, 263]
      }
    };

    // Atualizar Relógio
    function updateClock() {
      const now = new Date();
      document.getElementById('current-time').textContent = 
        now.toLocaleTimeString('pt-BR', { hour: '2-digit', minute: '2-digit' });
      setTimeout(updateClock, 60000);
    }
    updateClock();

    // Criar Gráficos
    function criarGrafico(id, tipoDado) {
      const ctx = document.getElementById(id).getContext('2d');
      return new Chart(ctx, {
        type: 'bar',
        data: {
          labels: setores,
          datasets: [{
            label: 'Total',
            data: dados[tipoDado]['Total'],
            backgroundColor: coresSetores,
            borderColor: '#fff',
            borderWidth: 2,
            borderRadius: 6
          }]
        },
        options: {
          responsive: true,
          maintainAspectRatio: false,
          plugins: {
            datalabels: {
              color: '#fff',
              anchor: 'end',
              align: 'top',
              font: {
                weight: 'bold',
                size: 14
              }
            },
            legend: { display: false },
            tooltip: {
              callbacks: {
                label: (context) => `${setores[context.dataIndex]}: ${context.raw}`
              }
            }
          },
          scales: {
            y: {
              beginAtZero: true,
              grid: {
                color: 'rgba(0,0,0,0.05)'
              },
              title: { 
                display: true, 
                text: 'Quantidade',
                color: '#666'
              }
            },
            x: {
              grid: {
                display: false
              }
            }
          }
        },
        plugins: [ChartDataLabels]
      });
    }

    // Inicializar Gráficos
    const charts = {
      rupturas: criarGrafico('rupturasChart', 'rupturas'),
      inventarios: criarGrafico('inventariosChart', 'inventarios'),
      enderecos: criarGrafico('enderecosChart', 'enderecos')
    };

    // Atualizar Gráficos
    function atualizarTodosGraficos() {
      const mesSelecionado = document.getElementById('mesGlobalSelect').value;
      
      Object.keys(charts).forEach(tipo => {
        charts[tipo].data.datasets[0].data = dados[tipo][mesSelecionado];
        charts[tipo].update();
      });
    }
  </script>
</body>
</html>